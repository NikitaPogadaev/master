#include <iostream>
#include <algorithm>
#include <deque>

using namespace std;

long long nop(deque<long long> a1, deque<long long> a2){
    long long n = a1.size(),m=a2.size();
    a1.push_front(0);
    a2.push_front(0);
long long inf = 10000000000;
long long maxdp;

	deque <long long> temp(m + 1, 0);
	deque <deque <long long>>dp(n + 1, temp);
	long long maxi = -inf;
	for (long long i = 1; i <= n; i++) {
		maxdp = 0;
		for (long long j = 1; j <= m; j++) {
			dp[i][j] = dp[i - 1][j];
			if (a1[i] == a2[j] && dp[i - 1][j] <= maxdp)
				dp[i][j] = maxdp + 1;
			else if (a1[i] > a2[j] && dp[i - 1][j] > maxdp)
				maxdp = dp[i - 1][j];
			if (i == n)
				maxi = max(maxi, dp[i][j]);
		}
	}
	return maxi;
}


int main()
{
	long long n, m,u;
	cin >> n >> m;
	deque <long long> a1, a2;

	for (long long i = 0; i < n; i++) {
		cin >> u;
		a1.push_back(u);
	}
	for (long long i = 0; i < m; i++) {
		cin >> u;
		a2.push_back(u);
	}

	cout << nop(a1,a2);
}
